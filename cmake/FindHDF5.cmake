# - Find HDF5
# Find the Hierarchical Data Format 5 (HDF5) includes and library
#
# This module defines
#  HDF5_FOUND
#  HDF5_INCLUDE_DIR
#  HDF5_LIBRARY
#  HDF5_CPP_LIBRARY
#  HDF5_HL_LIBRARY
#

FIND_PATH(HDF5_INCLUDE_DIR hdf5.h
  /usr/local/include
  /usr/include
)

IF(HDF5_USE_STATIC_LIBS)
  SET( _HDF5_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
  IF(WIN32)
    SET(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
  ELSE(WIN32)
    SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
  ENDIF(WIN32)
ENDIF(HDF5_USE_STATIC_LIBS)

FIND_LIBRARY(HDF5_LIBRARY NAMES hdf5)
FIND_LIBRARY(HDF5_CPP_LIBRARY NAMES hdf5_cpp)
FIND_LIBRARY(HDF5_HL_LIBRARY NAMES hdf5_hl)

IF(HDF5_USE_STATIC_LIBS)
  SET(CMAKE_FIND_LIBRARY_SUFFIXES ${_HDF5_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES})
ENDIF(HDF5_USE_STATIC_LIBS)

IF(HDF5_LIBRARY AND HDF5_CPP_LIBRARY AND HDF5_HL_LIBRARY AND HDF5_INCLUDE_DIR)
  SET(HDF5_FOUND "YES")
ELSE(HDF5_LIBRARY AND HDF5_CPP_LIBRARY AND HDF5_HL_LIBRARY AND HDF5_INCLUDE_DIR)
  SET(HDF5_FOUND "NO")
ENDIF(HDF5_LIBRARY AND HDF5_CPP_LIBRARY AND HDF5_HL_LIBRARY AND HDF5_INCLUDE_DIR)

IF(HDF5_FOUND)
  IF(NOT HDF5_FIND_QUIETLY)
    MESSAGE(STATUS "Found Hierarchical Data Format 5: ${HDF5_LIBRARIES}")
  ENDIF(NOT HDF5_FIND_QUIETLY)
ELSE(HDF5_FOUND)
  IF(HDF5_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find Hierarchical Data Format 5")
  ENDIF(HDF5_FIND_REQUIRED)
ENDIF(HDF5_FOUND)

MARK_AS_ADVANCED(
  HDF5_LIBRARY
  HDF5_CPP_LIBRARY
  HDF5_HL_LIBRARY
  HDF5_INCLUDE_DIR
)
