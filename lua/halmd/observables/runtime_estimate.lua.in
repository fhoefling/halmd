--
-- Copyright © 2011  Felix Höfling
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

local module            = require("halmd.utility.module")
local mdsim = {
    clock               = require("halmd.mdsim.clock")
}

-- grab C++ wrappers
local runtime_estimate_wrapper = libhalmd.observables.runtime_estimate
-- grab standard library
local assert = assert

local M = module("halmd.observables.runtime_estimate")

--
-- construct instance of runtime_estimate module
--
-- @param args parameter table
--      total_steps   number of simulation steps until finish
--      current_step  current value of simulation step counter
--
-- @returns instance of runtime_estimate module
--
function M.__new(args)
    -- parameters
    local total_steps = assert(args.total_steps)

    -- dependency injection
    local clock = mdsim.clock()

    return assert(runtime_estimate_wrapper)(clock, total_steps)
end

--
-- returns module description
--
function M.description()
    return "runtime estimate"
end

return M
