--
-- Copyright © 2011  Felix Höfling
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

require("halmd.modules")

-- grab environment
local wavevector_wrapper = {
    [2] = halmd_wrapper.observables.utility.wavevector_2_
  , [3] = halmd_wrapper.observables.utility.wavevector_3_
}
local mdsim = {
    core = require("halmd.mdsim.core")
}
local assert = assert

module("halmd.observables.utility.wavevector", halmd.modules.register)

--
-- construct instance of wavevector module
--
-- @param args                parameter table:
--     args.wavenumber        list of wavenumbers
--     args.tolerance         relative tolerance on wavevector magnitude
--     args.maximum_count     maximum number of wavevectors per wavenumber shell
-- @returns instance of wavevector module
--
function new(args)
    -- options
    local wavenumber = assert(args.wavenumber)
    local tolerance = assert(args.tolerance)
    local maximum_count = assert(args.maximum_count)

    -- dependency injection
    local core = mdsim.core()
    local dimension = assert(core.dimension)
    local box = assert(core.box)

    local wavevector = assert(wavevector_wrapper[dimension])
    return wavevector(wavenumber, box.length, tolerance, maximum_count)
end
