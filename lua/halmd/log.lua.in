--
-- Copyright Â© 2010  Peter Colberg
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

require("halmd.modules")

-- grab C++ wrappers
local logger_wrapper = libhalmd.io.logger
local logging_wrapper = libhalmd.io.logging
-- grab standard library
local assert = assert
local rawget = rawget
local rawset = rawset
local setmetatable = setmetatable
local tostring = tostring

module("halmd.log", halmd.modules.provider)

--
-- provide module logger
--
function parameters(module)
    local logger = logger_wrapper()
    logger:add_attribute("Module", assert(module.namespace))
    return {logger = logger}
end

setmetatable(_M, {
    --
    -- log message with given severity
    --
    -- @param level Logging severity level
    --
    __index = function(self, level)
        local wrapper = logging_wrapper[level]
        local log
        if wrapper then
            log = function(message, ...)
                wrapper(tostring(message):format(...))
            end
        else
            log = function() end
        end
        rawset(self, level, log)
        return log
    end
})
