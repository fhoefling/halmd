--
-- Copyright Â© 2010-2011  Peter Colberg
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

local module            = require("halmd.utility.module")
local mdsim = {
    clock               = require("halmd.mdsim.clock")
}

-- grab C++ wrappers
local core_wrapper = libhalmd.mdsim.core
-- grab standard library
local assert = assert

local M = module.singleton("halmd.mdsim.core")

--
-- construct core module
--
function M.__new(args)
    local clock = mdsim.clock() -- singleton
    return core_wrapper(clock)
end

--
-- connect runtime accumulators to module profiler
--
function M.profile(self, profiler)
    profiler:on_profile{self, setup = "microscopic state preparation"}
    profiler:on_profile{self, mdstep = "MD integration step"}
end

return M
