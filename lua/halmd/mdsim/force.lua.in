--
-- Copyright © 2010-2011  Peter Colberg and Felix Höfling
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

local forces = require("halmd.mdsim.forces")
local module = require("halmd.utility.module")

-- grab C++ wrappers
local h5 = libhalmd.h5
local po = libhalmd.po
-- grab standard library
local assert = assert
local pairs = pairs
local property = property

local M = module("halmd.mdsim.force")

--
-- construct force module
--
function M.__new(args)
    local force = args.force or "pair_trunc" -- default value
    return assert(forces[force])()
end

--
-- assemble module options
--
-- @param desc po.options_description
--
function M.options(desc, globals)

    -- force module choices with descriptions
    local choices = {
        pair_full       = forces.pair_full.description()
      , pair_trunc      = forces.pair_trunc.description()
      , zero            = forces.zero.description()
    }

    globals:add("force", po.string():choices(choices), "select force algorithm")
end

--
-- read module parameters from HDF5 group
--
function M.read_parameters(args, group, globals)
    args.force = globals:read_attribute("force", h5.string())
end

--
-- write module parameters to HDF5 group
--
-- @param force module instance
-- @param group HDF5 group
--
function M.write_parameters(force, group, globals)
    globals:write_attribute("force", h5.string(), force.module.namespace)
end

return M
