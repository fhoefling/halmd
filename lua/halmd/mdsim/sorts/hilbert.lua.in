--
-- Copyright © 2010  Peter Colberg
-- Copyright © 2013  Nicolas Höft
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

local device            = require("halmd.utility.device")
local log               = require("halmd.io.log")
local utility           = require("halmd.utility")
local module            = require("halmd.utility.module")
local profiler          = require("halmd.utility.profiler")

-- grab C++ wrappers
local hilbert =  assert(libhalmd.mdsim.sorts.hilbert)

---
-- Hilbert sort
-- ============
--
-- This module will sort the particles in the memory by a space-filling Hilbert curve.
-- This module will be constructed automatically by :class:`halmd.mdsim.neighbour`, i.e. manual
-- construction is not needed.
--

---
-- Construct Hilbert sort module.
--
-- :param table args: keyword arguments
-- :param args.particle: instance of :class:`halmd.mdsim.particle`
-- :param args.box: instance of :class:`halmd.mdsim.box`
-- :param args.binning: instance of :class:`halmd.mdsim.binning`
--
-- .. method:: order
--
--    Sort the particles with a space filling Hilbert curve
--
-- .. method:: disconnect()
--
--    Disconnect neighbour module from core and profiler.
--
local M = module(function(args)
    -- dependency injection
    local particle = utility.assert_kwarg(args, "particle")
    local box = utility.assert_kwarg(args, "box")
    local dimension = assert(particle.dimension)
    local binning = utility.assert_kwarg(args, "binning")
    local logger = log.logger({label = "hilbert (" .. particle.label .. ")"})

    local self = hilbert(particle, box, logger)

    local conn = {}
    self.disconnect = utility.signal.disconnect(conn, "hilbert sort module")

    -- connect hilbert module to profiler
    local runtime = assert(self.runtime)

    table.insert(conn, assert(profiler:on_profile(runtime.order, "order particles by permutation")))
    table.insert(conn, assert(profiler:on_profile(runtime.map, "map particles to Hilbert curve")))

    return self
end)

return M
