--
-- Copyright © 2012 Peter Colberg
-- Copyright © 2012 Felix Höfling
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

local module = require("halmd.utility.module")

---
-- Particle Group
-- ==============
--
-- A particle group represents a subset of particles, which is defined
-- by an instance of particle together with a sequence of indices.
--
-- Example::
--
--    -- construct particle instance for given simulation domain
--    local system = halmd.mdsim.particle({box = box, particles = 10000, species = 2})
--
--    -- select all particles, i.e. range is {1, particle.nparticle}
--    local group_all = halmd.mdsim.particle_group({particle = particle})
--
--    -- select each species, assuming particles of a species have contiguous tags
--    local group_A = halmd.mdsim.particle_group({particle = system, range = {1, 5000}, label = "A"})
--    local group_B = halmd.mdsim.particle_group({particle = system, range = {5001, 10000}, label = "B"})
--

-- grab C++ wrappers
local particle_group_from_range = assert(libhalmd.mdsim.particle_group_from_range)

---
-- Construct particle group from tag range.
--
-- :param table args: keyword arguments
-- :param args.particle: instance of :class:`halmd.mdsim.particle`
-- :param table args.range: particle tag range ``{first, last}`` (defaults to all particles)
-- :param string args.label: group label (defaults to :attr:`halmd.mdsim.particle.label` if all particles)
--
-- .. note::
--
--    Particle tags are 1-based, i.e. the first particle has tag 1.
--
-- .. attribute:: particle
--
--    Instance of :class:`halmd.mdsim.particle`
--
-- .. attribute:: size
--
--    Number of particles in group.
--
local M = module(function(args)
    local particle = args.particle
    if not particle then
        error("missing argument 'particle'", 2)
    end
    local range = args.range
    local label = args.label
    if not range then
        range = {1, assert(particle.nparticle)}
        label = assert(particle.label)
    end
    if type(range) ~= "table" or #range ~= 2 then
        error("invalid argument 'range'", 2)
    end
    if type(label) ~= "string" then
        error("invalid argument 'label'", 2)
    end

    -- construct particle group from tag range
    local self = particle_group_from_range(particle, range[1], range[2])

    -- attach label as read-only property
    self.label = property(function(self)
        return label
    end)

    return self
end)

return M
