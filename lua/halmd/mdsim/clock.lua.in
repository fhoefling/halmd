--
-- Copyright Â© 2011  Peter Colberg
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

local module = require("halmd.utility.module")

-- grab C++ wrappers
local clock_wrapper = libhalmd.mdsim.clock
local h5 = libhalmd.h5
local po = libhalmd.po
-- grab standard library
local assert = assert

local M = module.singleton("halmd.mdsim.clock")

--
-- construct clock module
--
function M.__new(args)
    local timestep = args.timestep or 0.001 -- default value
    return clock_wrapper(timestep)
end

--
-- assemble module options
--
function M.options(desc, globals)
    globals:add("timestep", po.float(), "simulation timestep")
end

--
-- read module parameters from HDF5 group
--
function M.read_parameters(args, group, globals)
    args.timestep = globals:read_attribute("timestep", h5.float())
end

--
-- write module parameters to HDF5 group
--
function M.write_parameters(clock, group, globals)
    globals:write_attribute("timestep", h5.float(), clock.timestep)
end

return M
