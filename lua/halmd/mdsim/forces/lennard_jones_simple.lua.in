--
-- Copyright © 2010-2011  Peter Colberg and Felix Höfling
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

require("halmd.modules")

-- grab environment
local lennard_jones_simple_wrapper = {}
if libhalmd.mdsim.gpu then
    lennard_jones_simple_wrapper.gpu = libhalmd.mdsim.gpu.forces.lennard_jones_simple
end

local device = require("halmd.device")
local h5 = libhalmd.h5
local po = libhalmd.po
local assert = assert

module("halmd.mdsim.forces.lennard_jones_simple", halmd.modules.register)

--
-- construct Lennard-Jones module for a simple fluid of one species
--
function new(args)
    local cutoff = args.cutoff or 2.5 -- default value
    local logger = assert(args.logger)

    assert(device())
    local lennard_jones_simple = assert(lennard_jones_simple_wrapper.gpu)
    return lennard_jones_simple(cutoff, logger)
end

--
-- returns module description
--
function name()
    return "Lennard-Jones potential for single species"
end

--
-- assemble module options
--
-- @param desc po.options_description
--
function options(desc)
    desc:add("cutoff", po.float(), "truncate potential at cutoff radius")
    -- FIXME desc:add("smooth", po.float_array(), "C²-potential smoothing factor")
end

--
-- read module parameters from HDF5 group
--
function read_parameters(args, group)
    -- FIXME args.cutoff = group:read_attribute("cutoff", h5.float())
end

--
-- write module parameters to HDF5 group
--
-- @param lennard_jones module instance
-- @param group HDF5 group
--
function write_parameters(lennard_jones, group)
    group:write_attribute("cutoff", h5.float_array(), lennard_jones.r_cut:data())
end
