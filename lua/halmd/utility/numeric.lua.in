--
-- Copyright © 2013 Felix Höfling
-- Copyright © 2011 Peter Colberg
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

local M = {}

--
-- returns the last value of a table that satisfies comp(a,b)
--
function M.find_comp(t, comp)
    if #t == 0 then return nil end
    local value = t[1]
    for i = 2, #t do
        if comp(value, t[i]) then
            value = t[i]
        end
    end
    return value
end

--
-- returns the maximum value of a table
--
function M.max(t)
    return M.find_comp(t, function(a,b) return a < b end)
end

--
-- returns the minimum value of a table
--
function M.min(t)
    return M.find_comp(t, function(a,b) return a > b end)
end

--
-- returns matrix of given size with scalar value
--
function M.scalar_matrix(rows, columns, value)
    local mat = {}
    for i = 1, rows do
        local row = {}
        for j = 1, columns do
            row[j] = value
        end
        mat[i] = row
    end
    return mat
end

--
-- returns transpose of matrix
--
function M.trans(m)
    local t = {}
    for i = 1, #m do
        local row = m[i]
        for j = 1, #row do
            if not t[j] then
                t[j] = {}
            end
            t[j][i] = row[j]
        end
    end
    return t
end

return M
