--
-- Copyright Â© 2011  Peter Colberg
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

require("halmd.mdsim.clock")
require("halmd.modules")
require("halmd.singleton")

-- grab modules
local mdsim = halmd.mdsim
-- grab C++ wrappers
local abort = assert(libhalmd.utility.abort)
local posix_signal = assert(libhalmd.utility.posix_signal)

module("halmd.utility.posix_signal", halmd.modules.register, halmd.singleton)

--
-- construct POSIX signal handler
--
function new(args)
    local signal_handler = posix_signal()

    -- gracefully abort simulation on SIGTERM or SIGINT
    local abort = abort(mdsim.clock())
    signal_handler:on_signal(posix_signal.SIGTERM, abort)
    signal_handler:on_signal(posix_signal.SIGINT, abort)

    return signal_handler
end

-- add supported POSIX signals to Lua module interface
SIGHUP  = posix_signal.SIGHUP
SIGALRM = posix_signal.SIGALRM
SIGUSR1 = posix_signal.SIGUSR1
SIGUSR2 = posix_signal.SIGUSR2
SIGCONT = posix_signal.SIGCONT
SIGTSTP = posix_signal.SIGTSTP
SIGTTIN = posix_signal.SIGTTIN
SIGTTOU = posix_signal.SIGTTOU
