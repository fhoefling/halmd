--
-- Copyright Â© 2012 Peter Colberg
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

-- grab C++ wrappers
local posix_signal = assert(libhalmd.utility.posix_signal)

---
-- POSIX Signal
-- ============
--
-- The POSIX signal handler intercepts process signals.
--
-- .. method:: on_hup(slot)
--
--   Connect slot to invoke on signal ``HUP``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_int(slot)
--
--   Connect slot to invoke on signal ``INT``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_alrm(slot)
--
--   Connect slot to invoke on signal ``ALRM``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_term(slot)
--
--   Connect slot to invoke on signal ``TERM``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_usr1(slot)
--
--   Connect slot to invoke on signal ``USR1``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_usr2(slot)
--
--   Connect slot to invoke on signal ``USR2``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_cont(slot)
--
--   Connect slot to invoke on signal ``CONT``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_tstp(slot)
--
--   Connect slot to invoke on signal ``TSTP``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_ttin(slot)
--
--   Connect slot to invoke on signal ``TTIN``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. method:: on_ttou(slot)
--
--   Connect slot to invoke on signal ``TTOU``.
--
--   :param slot: unary slot that accepts signal number
--   :returns: connection
--
-- .. attribute:: wait
--
--   Nullary slot that blocks process until signal is received.
--
-- .. attribute:: poll
--
--   Nullary slot that polls signal queue, and returns true if signal was handled.
--

-- construct singleton instance
return posix_signal()
