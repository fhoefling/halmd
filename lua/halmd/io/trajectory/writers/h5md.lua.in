--
-- Copyright Â© 2010-2011  Peter Colberg
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

require("halmd.modules")

require("halmd.device")
require("halmd.mdsim.core")
require("halmd.observables.samples.phase_space")
require("halmd.parameter")

-- grab modules
local device = halmd.device
local mdsim = halmd.mdsim
local observables = halmd.observables
local parameter = halmd.parameter
-- grab C++ wrappers
local h5md_wrapper = {
    host = {
        [2] = libhalmd.io.trajectory.writers.h5md_2_double_
      , [3] = libhalmd.io.trajectory.writers.h5md_3_double_
    }
  , gpu = {
        [2] = libhalmd.io.trajectory.writers.h5md_2_float_
      , [3] = libhalmd.io.trajectory.writers.h5md_3_float_
    }
}
-- grab standard library
local assert = assert

module("halmd.io.trajectory.writers.h5md", halmd.modules.register)

--
-- construct H5MD trajectory writer module
--
function new(args)
    -- dependency injection
    local core = mdsim.core()
    local dimension = assert(core.dimension)
    local sample = assert(observables.samples.phase_space{ memory = "host" })

    -- command line options
    local output = assert(args.output)

    -- parameters
    local file_name = output .. ".trj"

    local writer
    if not device() then
        writer = h5md_wrapper.host[dimension](sample, file_name)
    else
        writer = h5md_wrapper.gpu[dimension](sample, file_name)
    end

    parameter.register_writer(writer)

    return writer
end

--
-- returns module description
--
function name()
    return "H5MD file format"
end
