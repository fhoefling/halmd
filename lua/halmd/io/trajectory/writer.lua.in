--
-- Copyright Â© 2010-2011  Peter Colberg
--
-- This file is part of HALMD.
--
-- HALMD is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

require("halmd.modules")

require("halmd.io.trajectory.writers")
require("halmd.observables.phase_space")

-- grab modules
local trajectory = halmd.io.trajectory
local observables = halmd.observables
-- grab C++ wrappers
local po = libhalmd.po
-- grab standard library
local assert = assert
local pairs = pairs

module("halmd.io.trajectory.writer", halmd.modules.register)

--
-- construct trajectory writer module
--
function new(args)
    local format = args.format or "h5md" -- default value
    local writer = assert(trajectory.writers[format])()

    -- FIXME share phase_space instance with observables::host::density_mode
    local phase_space = assert(observables.phase_space{ memory = "host" })
    -- sample phase space before appending trajectory
    writer:on_append(phase_space.acquire)

    return writer
end

-- override module namespace
namespace = "trajectory"

--
-- assemble module options
--
-- @param desc po.options_description
--
function options(desc)

    -- writer module choices with descriptions
    local choices = {}
    for writer, module in pairs(trajectory.writers) do
        if module.name then
            choices[writer] = module.name()
        end
    end

    desc:add("format", po.string():choices(choices), "trajectory output file format")
end
