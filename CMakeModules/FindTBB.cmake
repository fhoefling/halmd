# - Find TBB
# Find the Threading Building Blocks library
#
# This module defines
#  TBB_FOUND
#  TBB_LIBRARY
#  TBB_INCLUDE_DIR
#

FIND_PATH(TBB_INCLUDE_DIR tbb/tbb.h)

IF(TBB_USE_STATIC_LIBS)
  SET( _TBB_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
  IF(WIN32)
    SET(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
  ELSE(WIN32)
    SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})
  ENDIF(WIN32)
ENDIF(TBB_USE_STATIC_LIBS)

FIND_LIBRARY(TBB_LIBRARY NAMES tbb)

IF(TBB_USE_STATIC_LIBS)
  SET(CMAKE_FIND_LIBRARY_SUFFIXES ${_TBB_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES})
ENDIF(TBB_USE_STATIC_LIBS)

IF(TBB_LIBRARY AND TBB_INCLUDE_DIR)
  SET(TBB_FOUND "YES")
ELSE(TBB_LIBRARY AND TBB_INCLUDE_DIR)
  SET(TBB_FOUND "NO")
ENDIF(TBB_LIBRARY AND TBB_INCLUDE_DIR)

IF(TBB_FOUND)
  IF(NOT TBB_FIND_QUIETLY)
    MESSAGE(STATUS "Found Threading Building Blocks library: ${TBB_LIBRARY}")
  ENDIF(NOT TBB_FIND_QUIETLY)
ELSE(TBB_FOUND)
  IF(TBB_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find Threading Building Blocks library")
  ENDIF(TBB_FIND_REQUIRED)
ENDIF(TBB_FOUND)

MARK_AS_ADVANCED(
  TBB_LIBRARY
  TBB_INCLUDE_DIR
)
