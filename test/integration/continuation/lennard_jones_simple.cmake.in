#!@CMAKE_COMMAND@ -P
#
# Copyright © 2011 Felix Höfling
# Copyright © 2011-2012 Peter Colberg
#
# This file is part of HALMD.
#
# HALMD is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#

##
# Test trajectory continuation for a simple, one-component Lennard-Jones fluid
# where the optimised module for the GPU backend is used

set(CMAKE_MODULE_PATH "@HALMD_TEST_CMAKE_BINARY_DIR@")

include(execute_halmd)

set(OUTPUT_PREFIX "@CMAKE_CURRENT_BINARY_DIR@/lennard_jones_simple")
set(HALMD_WITH_GPU @HALMD_WITH_GPU@)

if(DEFINED USE_HOST)
  if(HALMD_WITH_GPU)
    set(BACKEND_OPTION "--disable-gpu")
  endif()
  message(STATUS "Using host backend for continuation")
else()
  message(STATUS "Using GPU backend for continuation")
endif()

if(NOT DEFINED DIMENSION)
  message(FATAL_ERROR "Variable DIMENSION undefined")
else()
  message(STATUS "Space dimension: ${DIMENSION}")
endif()

if(DIMENSION EQUAL 3)
  set(EDGE_RATIOS "1,2,1.01")
else()
  set(EDGE_RATIOS "1,2")
endif()

execute_halmd(
  "${BACKEND_OPTION}"
  "@CMAKE_SOURCE_DIR@/examples/liquid/lennard_jones_equilibration.lua"
  --verbose
  --overwrite
  --output "${OUTPUT_PREFIX}"
  --particles 300
  --ratios "${EDGE_RATIOS}"
  --density 0.1
  --time 1
  --sampling trajectory=1000
)

execute_halmd(
  "${BACKEND_OPTION}"
  "@CMAKE_SOURCE_DIR@/examples/liquid/lennard_jones.lua"
  --verbose
  --output "${OUTPUT_PREFIX}_continued"
  --input "${OUTPUT_PREFIX}.h5"
  --time 1
  --sampling trajectory=1000
)

execute_process(
  COMMAND "@CMAKE_CURRENT_BINARY_DIR@/test_integration_continuation_compare_trajectory"
    @BOOST_TEST_ARGS@
    "${OUTPUT_PREFIX}.h5"
    "${OUTPUT_PREFIX}_continued.h5"
    -1
    0
  WORKING_DIRECTORY "@CMAKE_CURRENT_BINARY_DIR@"
  RESULT_VARIABLE ${OUTPUT_PREFIX}_STATUS
)
if(NOT ${OUTPUT_PREFIX}_STATUS STREQUAL "0")
  message(SEND_ERROR "failed to compare trajectory")
endif()

file(REMOVE
  "${OUTPUT_PREFIX}.h5"
  "${OUTPUT_PREFIX}.log"
  "${OUTPUT_PREFIX}_continued.log"
  "${OUTPUT_PREFIX}_continued.h5"
)
