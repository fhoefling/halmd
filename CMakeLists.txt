CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(ljfluid)

SET(CMAKE_MODULE_PATH ${ljfluid_SOURCE_DIR}/CMakeModules)

SET(GIT_FIND_REQUIRED TRUE)
FIND_PACKAGE(Git)

GIT_REPOSITORY_INFO(${ljfluid_SOURCE_DIR} ljfluid)

SET(PROGRAM_NAME "ljfluid")

IF(ljfluid_GIT_VERSION)
  STRING(REGEX MATCH "v[0-9].*" PROGRAM_VERSION "${ljfluid_GIT_VERSION}")
  IF(NOT PROGRAM_VERSION)
    SET(PROGRAM_VERSION "(commit ${ljfluid_GIT_COMMIT})")
  ENDIF(NOT PROGRAM_VERSION)
ELSE(ljfluid_GIT_VERSION)
  SET(PROGRAM_VERSION "(devel)")
ENDIF(ljfluid_GIT_VERSION)

IF(ljfluid_GIT_AUTHOR_DATE)
  SET(PROGRAM_DATE "${ljfluid_GIT_AUTHOR_DATE}")
ELSE(ljfluid_GIT_AUTHOR_DATE)
  SET(PROGRAM_DATE "unknown date")
ENDIF(ljfluid_GIT_AUTHOR_DATE)


SET(GSL_FIND_REQUIRED TRUE)
SET(GSL_FIND_QUIETLY TRUE)
FIND_PACKAGE(GSL)

SET(Boost_FIND_REQUIRED TRUE)
SET(Boost_FIND_QUIETLY TRUE)
FIND_PACKAGE(Boost COMPONENTS filesystem date_time program_options)

FIND_PACKAGE(Gnuplot)

ENABLE_LANGUAGE(CUDA)

SET(CUDA_FIND_REQUIRED TRUE)
SET(CUDA_FIND_QUIETLY TRUE)
FIND_PACKAGE(CUDA)

SET(HDF5_FIND_REQUIRED TRUE)
SET(HDF5_FIND_QUIETLY TRUE)
FIND_PACKAGE(HDF5)

# Add program variant compile flags to cmake GUI
SET(ljfluid_VARIANT_CUDA TRUE CACHE BOOL
  "Use CUDA")
SET(ljfluid_VARIANT_CELL FALSE CACHE BOOL
  "Use fixed-size cell lists")
SET(ljfluid_VARIANT_CELL_SUMMATION_ORDER FALSE CACHE BOOL
  "Use opposite cell summation order")
SET(ljfluid_VARIANT_DSFUN FALSE CACHE BOOL
  "Use double-single precision functions")
SET(ljfluid_VARIANT_NEIGHBOUR TRUE CACHE BOOL
  "Use Verlet neighbour lists")
SET(ljfluid_VARIANT_HILBERT TRUE CACHE BOOL
  "Use Hilbert space-filling curve particle ordering")
SET(ljfluid_VARIANT_C2POT FALSE CACHE BOOL
  "Use C2 potential smoothing")

IF(ljfluid_VARIANT_CUDA)
  ADD_DEFINITIONS(-DUSE_CUDA)
  IF(ljfluid_VARIANT_NEIGHBOUR)
    ADD_DEFINITIONS(-DUSE_NEIGHBOUR)
    IF(ljfluid_VARIANT_HILBERT)
      ADD_DEFINITIONS(-DUSE_HILBERT_ORDER)
    ENDIF(ljfluid_VARIANT_HILBERT)
  ELSE(ljfluid_VARIANT_NEIGHBOUR)
    IF(ljfluid_VARIANT_CELL)
      ADD_DEFINITIONS(-DUSE_CELL)
      IF(ljfluid_VARIANT_CELL_SUMMATION_ORDER)
	ADD_DEFINITIONS(-DUSE_CELL_SUMMATION_ORDER)
      ENDIF(ljfluid_VARIANT_CELL_SUMMATION_ORDER)
      IF(ljfluid_VARIANT_DSFUN)
	ADD_DEFINITIONS(-DUSE_DSFUN)
      ENDIF(ljfluid_VARIANT_DSFUN)
    ENDIF(ljfluid_VARIANT_CELL)
  ENDIF(ljfluid_VARIANT_NEIGHBOUR)
ENDIF(ljfluid_VARIANT_CUDA)
IF(ljfluid_VARIANT_C2POT)
  ADD_DEFINITIONS(-DUSE_POTENTIAL_SMOOTHING)
ENDIF(ljfluid_VARIANT_C2POT)

INCLUDE_DIRECTORIES(${ljfluid_SOURCE_DIR}/include)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(test)
