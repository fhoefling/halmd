Tutorial: diffusion in a simple liquid
==========================================


Necessary Files
----------------------------

These files can be found in the ``/share/doc/halmd/examples/liquid`` folder.

- lennard_jones_equilibration.lua 

- lennard_jones.lua 



Starting the Simulation
----------------------------
Run the equilibration script::

	halmd lennard_jones_equilibration.lua -v \
            --density 0.7 \
            --temperature 1.3 \
            --cutoff 2.5

Run the rest of the simulation::
		
    halmd lennard_jones.lua -v \
            --input equilibration_output.h5


To evaluate the diffusion constant, the mean square displacement data is
needed. In the second .h5 file generated, this is found with the following
path within the data structure: ``dynamics/all/mean_square_displacement``. The
diffusion constant can be calculated with the file ``diffusion_constant.py`` and
running the following command with some number value for start_time::

    python diffusion_constant.py simulation_output.h5 --start_t start_time


The contents of the file "diffusion_constant.py" are explained below.

It begins by loading some packages, defining command line options, and opening
the HDF5 output file

.. literalinclude:: diffusion_constant.py
  :lines: 1-26



It then extracts the relevant data for the computation of the diffusion
constant. The data is restructured into a single array and sorted.

.. literalinclude:: ./diffusion_constant.py
  :lines: 28-39
        

If only a subset of the data is to be used in the fit and thus calculation of
the diffusion constant, the data is separated so it can still be plotted
together. In the case of the ``--range`` argument, the indices of the start
and end time are specified. In the case of the ``--start_t`` argument, the
value of the minimum time is specified. Note that if both arguments are
specified, the ``--start_t`` argument will dominate.

.. literalinclude:: ./diffusion_constant.py
  :lines: 41-65

The desired data is fit with a linear function that passes through the origin.
The slope is then printed to the screen.

.. literalinclude:: ./diffusion_constant.py
  :lines: 67-70

This portion writes the data to a separate file if "--dump" is included in the
command above.

.. literalinclude:: ./diffusion_constant.py
  :lines: 72-78


This section plots the whole mean squared displacement data on a log-log plot.
The data used in the fit is blue whereas the other data is green.

.. literalinclude:: ./diffusion_constant.py
  :lines: 80-94
        
