FAQ
***

**With HALMD, I could do simulations of breath-taking quality and have obtained new scientific insight. How may I thank you?**

  Please acknowledge the use of HALMD in your publications by citing our article:

   P. H. Colberg and F. Höfling,
   *Highly accelerated simulations of glassy dynamics using GPUs: Caveats on limited floating-point precision,*
   Comp. Phys. Comm. *182*, 1120 (2011) `[Link] <http://dx.doi.org/10.1016/j.cpc.2011.01.009>`_.

**Why does HALMD abort with “[ERROR] potential energy diverged”?**

  An infinite potential energy sum of one or more particles indicates that the
  integration time-step is too large.

  Try lowering the ``--timestep`` value.

**Linking fails with: undefined reference to `boost::filesystem3::detail::copy_file(...)'** ::

  Check that the ABI version of the installed Boost C++ library conforms to
  C++11. This can be achieved by building Boost C++ with the GCC option
  ``--std=c++11``.

**nvcc fails with 'cudafe++' died due to signal 11 (Invalid memory reference)**

  This is due to a bug in the CUDA compiler, which may be circumvented by
  including ``--host-compilation=c`` in the ``NVCCFLAGS`` environment variable
  passed to cmake, or in CMAKE_CUDA_FLAGS using ccmake.

**nvcc fails with error: inline function ‘__signbit’ cannot be declared weak**

  CUDA 3.0 (or less) is not compatible with GCC 4.4.
  As a work around install GCC 4.3 and place symlinks in the default CUDA
  compiler directory, e.g. if the CUDA toolkit is located in ``/opt/cuda``,
  symlink ``/opt/cuda/bin/{gcc,g++}`` to ``/usr/bin/{gcc,g++}-4.3``, respectively.
  The compiler directory may be overriden with the ``--compiler-bindir`` option.

